#include <stdio.h>

#include <stdlib.h>

#include <string.h>



void SortByName(char names[][30], char surnames[][30], float cgps[], int L)

{

}



void SortBySurname(char names[][30], char surnames[][30], float cgps[], int L)

{

}



void SortByCGPA(char names[][30], char surnames[][30], float cgps[], int L)

{

}



void DisplayInformation(char names[][30], char surnames[][30], float cgps[], int L)

{

	// Check information

	/*for(int i=0; i<3; i++)

	{

		puts(Names[i]);

		puts(Surnames[i]);

		printf("%f\n", CGPAs[i]);

		printf("-----------------\n");

	}

	*/

}





int main()

{

	char Names[3][30];

	char Surnames[3][30];

	float CGPAs[3];

	

	// Get the information

	for(int i=0; i<3; i++)

	{

		printf("Enter std %d name: ", i+1);

		gets(Names[i]);

	

		printf("Enter std %d surname: ", i+1);

		gets(Surnames[i]);

	

		printf("Enter std %d cgpa: ", i+1);

		scanf("%f", &CGPAs[i]);

		char t; // escaping the enter button

		scanf("%c", &t);

	}

	



	// Show options to the user

	printf("\nChoose the sorting option:\n");

	printf("1. By Name\n");

	printf("2. By Surname\n");

	printf("3. By CGPA\n");

	printf("0. Exit\n");

	

	int choice;

	scanf("%d", &choice);

	

	while(choice != 0)

	{



		switch(choice)

		{

			case 1:

				// sort all the arrays based on names

				SortByName(Names, Surnames, CGPAs, 3);

				break;

			case 2:

				// sort all the arrays based on surnames

				SortBySurname(Names, Surnames, CGPAs, 3);

				break;

			case 3:

				// sort all the arrays based on CGPAs

				SortByCGPA(Names, Surnames, CGPAs, 3);

				break;



			default:

				printf("Wrong option!\n");

				break;

		}

		// Display the arrays in a table

		DisplayInformation(Names, Surnames, CGPAs, 3);



	// Show options to the user

	printf("\nChoose the sorting option:\n");

	printf("1. By Name\n");

	printf("2. By Surname\n");

	printf("3. By CGPA\n");

	printf("0. Exit\n");

	

	scanf("%d", &choice);

	

	}

	printf("Goodbye!");

	return 0;

}
